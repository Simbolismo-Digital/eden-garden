add .tool-versions

```
elixir 1.15.4-otp-26
erlang 26.0.2
nodejs 20.5.1
```

[create app](https://hexdocs.pm/phoenix/installation.html)

```
mix local.hex
mix archive.install hex phx_new
mix phx.new eden_garden
mv eden_garden/* .
mv -n eden_garden/* eden_garden/.formatter.exs eden_garden/.gitignore .
echo "" >> README.md
cat eden_garden/README.md >> README.md
rm -rf eden_garden
```

Comentei a Repo application como não pretendo trabalhar com o banco de dados imediatamente
lib/eden_garden/application.ex:14 # EdenGarden.Repo,

Up :D
mix phx.server

[create TreeServer](https://hexdocs.pm/elixir/1.12/GenServer.html)
[vídeo que ajuda a fazer algo semelhante](https://www.youtube.com/watch?v=CJT8wPnmjTM)

```
{:ok, pid} = EdenGarden.TreeServer.start_link("laranja")
EdenGarden.TreeServer.list(pid)
EdenGarden.TreeServer.pop(pid)
```

[name registration](https://hexdocs.pm/elixir/1.12/GenServer.html#module-name-registration)
observação posterior: {:via, module, name} if the server is registered through an alternative registry - será útil com o [Horde.Registry](https://hexdocs.pm/horde/Horde.Registry.html)

```
iex --sname fruits -S mix phx.server
iex --sname basket
Node.connect(:"fruits@davi-dragon")
Process.exit(:global.whereis_name("Elixir.EdenGarden.TreeServer.Macieira"), :shutdown)
Process.exit(:global.whereis_name("Elixir.EdenGarden.TreeServer.Laranjeira"), :shutdown)
Process.exit(:global.whereis_name("Elixir.EdenGarden.TreeServer.Bananeira"), :shutdown)
```
